Q1. What is a database? Differentiate between SQL and NoSQL databases.
ANS. A database is information that is set up for easy access, management and updating. Computer databases typically store aggregations of data records or files
that contain information, such as sales transactions, customer data, financials and product information.

Databases are used for storing, maintaining and accessing any sort of data. They collect information on people, places or things. That information is gathered in 
one place so that it can be observed and analyzed. Databases can be thought of as an organized collection of information.


Q2. What is DDL? Explain why CREATE, DROP, ALTER, and TRUNCATE are used with an example.
ans. DDL stands for Data Definition Language, which is a subset of SQL (Structured Query Language) used to define the database schema and structure. It allows users to create, modify, and delete database objects such as tables, indexes, and views.

CREATE: CREATE command is used to create a new database object such as a table, view, or index. For example, the following SQL statement creates a new table named "employees":

CREATE TABLE employees (
    id INT PRIMARY KEY,
    name VARCHAR(50),
    department VARCHAR(50),
    salary DECIMAL(10,2)
);

DROP: DROP command is used to delete an existing database object. For example, the following SQL statement drops the "employees" table:

DROP TABLE employees;

ALTER: ALTER command is used to modify the structure of an existing database object. For example, the following SQL statement adds a new column named "age" to the "employees" table:

ALTER TABLE employees
ADD age INT;


TRUNCATE: TRUNCATE command is used to delete all data from an existing table. For example, the following SQL statement deletes all data from the "employees" table:

TRUNCATE TABLE employees;


Q3. What is DML? Explain INSERT, UPDATE, and DELETE with an example.
ans. DML stands for Data Manipulation Language, which is a subset of SQL (Structured Query Language) used to manipulate the data stored in the database. It allows users to insert, update, and delete data in the database.

The following are the three primary commands of DML:

INSERT: INSERT command is used to insert new data into a table. For example, the following SQL statement inserts a new record into the "employees" table:

INSERT INTO employees (id, name, department, salary)
VALUES (1, 'John Doe', 'Sales', 50000);
This statement inserts a new record into the "employees" table with the values: id = 1, name = 'John Doe', department = 'Sales', and salary = 50000.

UPDATE: UPDATE command is used to update existing data in a table. For example, the following SQL statement updates the salary of an employee with id = 1:

UPDATE employees
SET salary = 55000
WHERE id = 1;
This statement updates the salary of the employee with id = 1 to 55000.

DELETE: DELETE command is used to delete existing data from a table. For example, the following SQL statement deletes an employee record with id = 1:

DELETE FROM employees
WHERE id = 1;




Q4. What is DQL? Explain SELECT with an example.
ans. DQL stands for Data Query Language, which is a subset of SQL (Structured Query Language) used to query and retrieve data from the database. It allows users to select and filter data from one or more tables in the database.

The primary command of DQL is SELECT, which is used to retrieve data from one or more tables. The SELECT command is very powerful and flexible, allowing users to retrieve data based on a wide range of criteria.

The basic syntax for the SELECT command is as follows:


SELECT column1, column2, ...
FROM table_name
WHERE condition;
The SELECT command starts with the SELECT keyword, followed by a comma-separated list of column names to retrieve. The FROM keyword specifies the name of the table or tables from which to retrieve data. The WHERE clause is optional and is used to filter the data based on a specified condition.

Here is an example of a SELECT statement:

SELECT id, name, department, salary
FROM employees
WHERE department = 'Sales';


Q5. Explain Primary Key and Foreign Key.
ans. Primary Key and Foreign Key are two important concepts in relational database design that are used to establish relationships between tables.

A Primary Key is a column or set of columns in a table that uniquely identifies each row in that table. It is used to ensure that each record in the table can be
uniquely identified and referenced. Primary keys can consist of a single column or multiple columns, and they must have a unique value for each row in the table.
In addition, primary keys cannot contain null values.

For example, in a table of "employees", the "id" column could be used as the primary key. Each row in the table would have a unique value for the "id" column,
which could be used to identify and reference that record.

A Foreign Key is a column or set of columns in one table that refers to the primary key of another table. It is used to establish a relationship between two
tables based on a common column or set of columns. Foreign keys help to ensure referential integrity between related tables, by ensuring that any changes made to 
the primary key values in one table are reflected in the corresponding foreign key values in another table.

For example, if a table of "orders" had a foreign key that referred to the "id" column of the "employees" table, this would establish a relationship between the 
two tables. The foreign key would ensure that any orders placed by a particular employee would be associated with that employee's unique "id" value in the 
"employees" table.



Q6. Write a python code to connect MySQL to python. Explain the cursor() and execute() method.
ans. import mysql.connector

# Connect to MySQL database
mydb = mysql.connector.connect(
  host="localhost",
  user="yourusername",
  password="yourpassword",
  database="yourdatabase"
)

# Create a cursor object
mycursor = mydb.cursor()

# Execute a SQL query
mycursor.execute("SELECT * FROM yourtable")

# Fetch the results
result = mycursor.fetchall()

# Print the results
for row in result:
  print(row)





Q7. Give the order of execution of SQL clauses in an SQL query.
ans. In an SQL query, the order of execution of the SQL clauses is as follows:

SELECT: This clause specifies the columns to be retrieved from the database.

FROM: This clause specifies the table or tables from which to retrieve the data.

JOIN: This clause is used to join multiple tables based on a common column or set of columns.

WHERE: This clause is used to filter the data based on a specified condition.

GROUP BY: This clause is used to group the data by one or more columns.

HAVING: This clause is used to filter the grouped data based on a specified condition.

ORDER BY: This clause is used to sort the data based on one or more columns.

LIMIT: This clause is used to limit the number of rows returned by the query.
